
R version 3.5.2 (2018-12-20) -- "Eggshell Igloo"
Copyright (C) 2018 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(tsDyn)
> library(tidyverse)
── Attaching packages ─────────────────────────────────────── tidyverse 1.2.1 ──
✔ ggplot2 3.1.0     ✔ purrr   0.2.5
✔ tibble  2.0.0     ✔ dplyr   0.7.8
✔ tidyr   0.8.2     ✔ stringr 1.3.1
✔ readr   1.3.1     ✔ forcats 0.3.0
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ dplyr::filter() masks stats::filter()
✖ dplyr::lag()    masks stats::lag()
> 
> ############################
> ### Load data
> ############################
> path_mod_multi <- system.file("inst/testdata/models_multivariate.rds", package = "tsDyn")
> if(path_mod_multi=="") path_mod_multi <- system.file("testdata/models_multivariate.rds", package = "tsDyn")
> 
> models_multivariate <- readRDS(path_mod_multi)
> 
> models_multivariate
# A tibble: 48 x 6
     lag include model object     object_vars  nthresh
   <dbl> <chr>   <chr> <list>     <list>         <int>
 1     1 both    VAR   <S3: VAR>  <S3: varest>      NA
 2     1 const   VAR   <S3: VAR>  <S3: varest>      NA
 3     1 none    VAR   <S3: VAR>  <S3: varest>      NA
 4     1 trend   VAR   <S3: VAR>  <S3: varest>      NA
 5     2 both    VAR   <S3: VAR>  <S3: varest>      NA
 6     2 const   VAR   <S3: VAR>  <S3: varest>      NA
 7     2 none    VAR   <S3: VAR>  <S3: varest>      NA
 8     2 trend   VAR   <S3: VAR>  <S3: varest>      NA
 9     1 both    VECM  <S3: VECM> <NULL>            NA
10     1 const   VECM  <S3: VECM> <S4: ca.jo>       NA
# … with 38 more rows
> 
> ############################
> ### VAR
> ############################
> 
> irf_any <- tsDyn:::irf_any
> irf_1 <- tsDyn:::irf_1
> irf_1.nlVar <- tsDyn:::irf_1.nlVar
> 
> ## manual comparisons
> mod_random_1 <- filter(models_multivariate, lag ==2)$object[[2]]
> mod_random_1_vars <- filter(models_multivariate, lag ==2)$object_vars[[2]]
> 
> irf_any(mod_random_1, boot = FALSE)$irf[[1]]
          dolcan        cpiUSA
 [1,] 0.01279642 -0.0048756343
 [2,] 0.01474258 -0.0003293138
 [3,] 0.01481730  0.0018693512
 [4,] 0.01458848  0.0018642930
 [5,] 0.01432107  0.0006853138
 [6,] 0.01405581 -0.0010343557
 [7,] 0.01379700 -0.0029806380
 [8,] 0.01354404 -0.0050076916
 [9,] 0.01329620 -0.0070495613
[10,] 0.01305302 -0.0090768908
[11,] 0.01281423 -0.0110768628
> irf(mod_random_1, boot = FALSE)$irf[[1]]
          dolcan        cpiUSA
 [1,] 0.01279642 -0.0048756343
 [2,] 0.01474258 -0.0003293138
 [3,] 0.01481730  0.0018693512
 [4,] 0.01458848  0.0018642930
 [5,] 0.01432107  0.0006853138
 [6,] 0.01405581 -0.0010343557
 [7,] 0.01379700 -0.0029806380
 [8,] 0.01354404 -0.0050076916
 [9,] 0.01329620 -0.0070495613
[10,] 0.01305302 -0.0090768908
[11,] 0.01281423 -0.0110768628
> irf(mod_random_1_vars, boot = FALSE)$irf[[1]]
          dolcan        cpiUSA
 [1,] 0.01279642 -0.0048756343
 [2,] 0.01474258 -0.0003293138
 [3,] 0.01481730  0.0018693512
 [4,] 0.01458848  0.0018642930
 [5,] 0.01432107  0.0006853138
 [6,] 0.01405581 -0.0010343557
 [7,] 0.01379700 -0.0029806380
 [8,] 0.01354404 -0.0050076916
 [9,] 0.01329620 -0.0070495613
[10,] 0.01305302 -0.0090768908
[11,] 0.01281423 -0.0110768628
> 
> irf_any(mod_random_1, boot = FALSE, ortho = FALSE)$irf[[1]]
         dolcan      cpiUSA
 [1,] 1.0000000  0.00000000
 [2,] 1.1506724  0.52942976
 [3,] 1.1556807  0.77998598
 [4,] 1.1374441  0.81507635
 [5,] 1.1164438  0.73894786
 [6,] 1.0957289  0.61180990
 [7,] 1.0755711  0.46302596
 [8,] 1.0558941  0.30615552
 [9,] 1.0366258  0.14732251
[10,] 1.0177245 -0.01074405
[11,] 0.9991672 -0.16684746
> irf(mod_random_1, boot = FALSE, ortho = FALSE)$irf[[1]]
         dolcan      cpiUSA
 [1,] 1.0000000  0.00000000
 [2,] 1.1506724  0.52942976
 [3,] 1.1556807  0.77998598
 [4,] 1.1374441  0.81507635
 [5,] 1.1164438  0.73894786
 [6,] 1.0957289  0.61180990
 [7,] 1.0755711  0.46302596
 [8,] 1.0558941  0.30615552
 [9,] 1.0366258  0.14732251
[10,] 1.0177245 -0.01074405
[11,] 0.9991672 -0.16684746
> irf(mod_random_1_vars, boot = FALSE, ortho = FALSE)$irf[[1]]
         dolcan      cpiUSA
 [1,] 1.0000000  0.00000000
 [2,] 1.1506724  0.52942976
 [3,] 1.1556807  0.77998598
 [4,] 1.1374441  0.81507635
 [5,] 1.1164438  0.73894786
 [6,] 1.0957289  0.61180990
 [7,] 1.0755711  0.46302596
 [8,] 1.0558941  0.30615552
 [9,] 1.0366258  0.14732251
[10,] 1.0177245 -0.01074405
[11,] 0.9991672 -0.16684746
> 
> ### irf _1
> models_IRF_1 <- models_multivariate %>% 
+   filter(model == "VAR") %>% 
+   mutate(irf = map(object, ~irf_1(.)))
> 
> models_IRF_1$irf %>% 
+   bind_rows() %>% 
+   as_tibble() %>% 
+   head()
# A tibble: 6 x 3
  dolcan cpiUSA impulse
   <dbl>  <dbl> <chr>  
1  1      0     dolcan 
2  0.987 -0.140 dolcan 
3  0.974 -0.278 dolcan 
4  0.962 -0.414 dolcan 
5  0.949 -0.549 dolcan 
6  0.937 -0.683 dolcan 
> 
> ### irf_any
> # irf.NULL <- function(x) NULL
> # irf.ca.jo <- function(x) irf(vec2var(ca.jo))
> 
> models_VAR <- models_multivariate %>% 
+   filter(model == "VAR")
> 
> ## older method
> models_IRF_any <- models_multivariate %>% 
+   filter(model == "VAR") %>% 
+   mutate(ortho = list(tibble(ortho =c(TRUE, FALSE)))) %>% 
+   unnest(ortho, .preserve = c("object", "object_vars")) %>% 
+   mutate(irf = map2(object, ortho, ~irf_any(.x,  boot = TRUE, runs = 2, seed = 7, ortho = .y)),
+          irf_vars = map2(object_vars, ortho, ~irf(.x, runs = 2, seed = 7, ortho = .y)),
+          irf_vec2 = map2(object, ortho, ~irf(.x,  boot = FALSE, runs = 2, seed = 7, ortho = .y)))
> 
> models_IRF_any
# A tibble: 16 x 10
     lag include model nthresh object  object_vars ortho irf   irf_vars irf_vec2
   <dbl> <chr>   <chr>   <int> <list>  <list>      <lgl> <lis> <list>   <list>  
 1     1 both    VAR        NA <S3: V… <S3: vares… TRUE  <S3:… <S3: va… <S3: va…
 2     1 both    VAR        NA <S3: V… <S3: vares… FALSE <S3:… <S3: va… <S3: va…
 3     1 const   VAR        NA <S3: V… <S3: vares… TRUE  <S3:… <S3: va… <S3: va…
 4     1 const   VAR        NA <S3: V… <S3: vares… FALSE <S3:… <S3: va… <S3: va…
 5     1 none    VAR        NA <S3: V… <S3: vares… TRUE  <S3:… <S3: va… <S3: va…
 6     1 none    VAR        NA <S3: V… <S3: vares… FALSE <S3:… <S3: va… <S3: va…
 7     1 trend   VAR        NA <S3: V… <S3: vares… TRUE  <S3:… <S3: va… <S3: va…
 8     1 trend   VAR        NA <S3: V… <S3: vares… FALSE <S3:… <S3: va… <S3: va…
 9     2 both    VAR        NA <S3: V… <S3: vares… TRUE  <S3:… <S3: va… <S3: va…
10     2 both    VAR        NA <S3: V… <S3: vares… FALSE <S3:… <S3: va… <S3: va…
11     2 const   VAR        NA <S3: V… <S3: vares… TRUE  <S3:… <S3: va… <S3: va…
12     2 const   VAR        NA <S3: V… <S3: vares… FALSE <S3:… <S3: va… <S3: va…
13     2 none    VAR        NA <S3: V… <S3: vares… TRUE  <S3:… <S3: va… <S3: va…
14     2 none    VAR        NA <S3: V… <S3: vares… FALSE <S3:… <S3: va… <S3: va…
15     2 trend   VAR        NA <S3: V… <S3: vares… TRUE  <S3:… <S3: va… <S3: va…
16     2 trend   VAR        NA <S3: V… <S3: vares… FALSE <S3:… <S3: va… <S3: va…
> 
> ## show head of irf any
> map_df(models_IRF_any$irf, ~ head(.$irf[[1]], 2) %>%  as_tibble) %>% 
+   as.data.frame() %>% 
+   as_tibble()
# A tibble: 32 x 2
   dolcan     cpiUSA
    <dbl>      <dbl>
 1 0.0130 -0.00801  
 2 0.0128 -0.00984  
 3 1       0        
 4 0.987  -0.140    
 5 0.0129 -0.00791  
 6 0.0128 -0.00974  
 7 1       0        
 8 0.987  -0.141    
 9 0.0130 -0.00439  
10 0.0130 -0.0000390
# … with 22 more rows
> 
> 
> ## compare with vars
> all.equal(models_IRF_any$irf[[1]]$irf, 
+           models_IRF_any$irf_vars[[1]]$irf)
[1] TRUE
> models_IRF_any$irf[[1]]$irf[[1]]
          dolcan       cpiUSA
 [1,] 0.01296044 -0.008008276
 [2,] 0.01279219 -0.009835144
 [3,] 0.01262584 -0.011642696
 [4,] 0.01246137 -0.013431155
 [5,] 0.01229877 -0.015200739
 [6,] 0.01213800 -0.016951666
 [7,] 0.01197905 -0.018684149
 [8,] 0.01182189 -0.020398399
 [9,] 0.01166652 -0.022094627
[10,] 0.01151290 -0.023773038
[11,] 0.01136101 -0.025433838
> models_IRF_any$irf_vars[[1]]$irf[[1]]
          dolcan       cpiUSA
 [1,] 0.01296044 -0.008008276
 [2,] 0.01279219 -0.009835144
 [3,] 0.01262584 -0.011642696
 [4,] 0.01246137 -0.013431155
 [5,] 0.01229877 -0.015200739
 [6,] 0.01213800 -0.016951666
 [7,] 0.01197905 -0.018684149
 [8,] 0.01182189 -0.020398399
 [9,] 0.01166652 -0.022094627
[10,] 0.01151290 -0.023773038
[11,] 0.01136101 -0.025433838
> models_IRF_any$irf_vec2[[1]]$irf[[1]]
          dolcan       cpiUSA
 [1,] 0.01296044 -0.008008276
 [2,] 0.01279219 -0.009835144
 [3,] 0.01262584 -0.011642696
 [4,] 0.01246137 -0.013431155
 [5,] 0.01229877 -0.015200739
 [6,] 0.01213800 -0.016951666
 [7,] 0.01197905 -0.018684149
 [8,] 0.01182189 -0.020398399
 [9,] 0.01166652 -0.022094627
[10,] 0.01151290 -0.023773038
[11,] 0.01136101 -0.025433838
> 
> comp <- models_IRF_any %>% 
+   mutate(comp_irf_tsD_vars = map2(irf, irf_vars,  ~all.equal(.x$irf, .y$irf)),
+          is_same = map_lgl(comp_irf_tsD_vars, ~isTRUE(.)),
+          comp_irf_tsDOld_vars = map2(irf_vec2, irf_vars,  ~all.equal(.x$irf, .y$irf)),
+          is_same_tssDvec2 = map_lgl(comp_irf_tsDOld_vars, ~isTRUE(.)),
+          comp_irf_tsDOld_tsDNew = map2(irf, irf_vec2,  ~all.equal(.x$irf, .y$irf)),
+          is_same_tsD_2ver = map_lgl(comp_irf_tsDOld_tsDNew, ~isTRUE(.))) %>% 
+   select(-starts_with("irf"), -starts_with("comp_irf"), comp_irf_tsDOld_tsDNew)
> 
> comp %>% 
+   select(-starts_with("object"))
# A tibble: 16 x 9
     lag include model nthresh ortho is_same is_same_tssDvec2 is_same_tsD_2ver
   <dbl> <chr>   <chr>   <int> <lgl> <lgl>   <lgl>            <lgl>           
 1     1 both    VAR        NA TRUE  TRUE    TRUE             TRUE            
 2     1 both    VAR        NA FALSE TRUE    TRUE             TRUE            
 3     1 const   VAR        NA TRUE  TRUE    TRUE             TRUE            
 4     1 const   VAR        NA FALSE TRUE    TRUE             TRUE            
 5     1 none    VAR        NA TRUE  TRUE    TRUE             TRUE            
 6     1 none    VAR        NA FALSE TRUE    TRUE             TRUE            
 7     1 trend   VAR        NA TRUE  FALSE   FALSE            TRUE            
 8     1 trend   VAR        NA FALSE FALSE   FALSE            TRUE            
 9     2 both    VAR        NA TRUE  TRUE    TRUE             TRUE            
10     2 both    VAR        NA FALSE TRUE    TRUE             TRUE            
11     2 const   VAR        NA TRUE  TRUE    TRUE             TRUE            
12     2 const   VAR        NA FALSE TRUE    TRUE             TRUE            
13     2 none    VAR        NA TRUE  TRUE    TRUE             TRUE            
14     2 none    VAR        NA FALSE TRUE    TRUE             TRUE            
15     2 trend   VAR        NA TRUE  FALSE   FALSE            TRUE            
16     2 trend   VAR        NA FALSE FALSE   FALSE            TRUE            
# … with 1 more variable: comp_irf_tsDOld_tsDNew <list>
> 
> ############################
> ### VECM
> ############################
> 
> models_VECM <- models_multivariate %>% 
+   filter(model == "VECM")
> 
> models_VECM
# A tibble: 8 x 6
    lag include model object     object_vars nthresh
  <dbl> <chr>   <chr> <list>     <list>        <int>
1     1 both    VECM  <S3: VECM> <NULL>           NA
2     1 const   VECM  <S3: VECM> <S4: ca.jo>      NA
3     1 none    VECM  <S3: VECM> <NULL>           NA
4     1 trend   VECM  <S3: VECM> <NULL>           NA
5     2 both    VECM  <S3: VECM> <NULL>           NA
6     2 const   VECM  <S3: VECM> <S4: ca.jo>      NA
7     2 none    VECM  <S3: VECM> <NULL>           NA
8     2 trend   VECM  <S3: VECM> <NULL>           NA
> 
> 
> ############################
> ### TVAR
> ############################
> 
> ## regime specific for TVAR
> models_TVAR <- models_multivariate %>% 
+   filter(model == "TVAR") 
> 
> models_TVAR %>% 
+   mutate(irf_L = map(object, ~irf_any(.,  boot = TRUE, runs = 2, seed = 7, ortho = FALSE, regime = "L")))
# A tibble: 16 x 7
     lag include model object     object_vars nthresh irf_L       
   <dbl> <chr>   <chr> <list>     <list>        <int> <list>      
 1     1 both    TVAR  <S3: TVAR> <NULL>            1 <S3: varirf>
 2     1 both    TVAR  <S3: TVAR> <NULL>            2 <S3: varirf>
 3     1 const   TVAR  <S3: TVAR> <NULL>            1 <S3: varirf>
 4     1 const   TVAR  <S3: TVAR> <NULL>            2 <S3: varirf>
 5     1 none    TVAR  <S3: TVAR> <NULL>            1 <S3: varirf>
 6     1 none    TVAR  <S3: TVAR> <NULL>            2 <S3: varirf>
 7     1 trend   TVAR  <S3: TVAR> <NULL>            1 <S3: varirf>
 8     1 trend   TVAR  <S3: TVAR> <NULL>            2 <S3: varirf>
 9     2 both    TVAR  <S3: TVAR> <NULL>            1 <S3: varirf>
10     2 both    TVAR  <S3: TVAR> <NULL>            2 <S3: varirf>
11     2 const   TVAR  <S3: TVAR> <NULL>            1 <S3: varirf>
12     2 const   TVAR  <S3: TVAR> <NULL>            2 <S3: varirf>
13     2 none    TVAR  <S3: TVAR> <NULL>            1 <S3: varirf>
14     2 none    TVAR  <S3: TVAR> <NULL>            2 <S3: varirf>
15     2 trend   TVAR  <S3: TVAR> <NULL>            1 <S3: varirf>
16     2 trend   TVAR  <S3: TVAR> <NULL>            2 <S3: varirf>
> 
> proc.time()
   user  system elapsed 
 17.057   0.260  21.890 
