
R version 3.5.2 (2018-12-20) -- "Eggshell Igloo"
Copyright (C) 2018 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(tsDyn)
> library(tidyverse)
── Attaching packages ─────────────────────────────────────── tidyverse 1.2.1 ──
✔ ggplot2 3.1.0     ✔ purrr   0.2.5
✔ tibble  1.4.2     ✔ dplyr   0.7.7
✔ tidyr   0.8.2     ✔ stringr 1.3.1
✔ readr   1.3.1     ✔ forcats 0.3.0
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ dplyr::filter() masks stats::filter()
✖ dplyr::lag()    masks stats::lag()
> 
> ############################
> ### Load data
> ############################
> path_mod_uni <- system.file("inst/testdata/models_univariate.rds", package = "tsDyn")
> if(path_mod_uni=="") path_mod_uni <- system.file("testdata/models_univariate.rds", package = "tsDyn")
> 
> models_univariate <- readRDS(path_mod_uni) %>% 
+   filter(model %in% c("lineaar", "setar"))
> 
> ################
> ### run boot
> ################
> 
> models_univariate %>% 
+   mutate(boot = map(object, ~ data_frame(n = 1:3, boot =head(setar.boot(., seed = 123), 3)))) %>% 
+   select(-object) %>% 
+   unnest(boot)  %>% 
+   spread(include, boot)
# A tibble: 18 x 9
     lag model nthresh thDelay     n  both const  none trend
   <dbl> <chr>   <int>   <int> <int> <dbl> <dbl> <dbl> <dbl>
 1     1 setar       1       0     1  2.68  3.26  3.27  2.58
 2     1 setar       1       0     2  2.81  3.32  3.46  2.95
 3     1 setar       1       0     3  2.15  2.71  2.83  2.60
 4     1 setar       2       0     1  3.26  3.31  3.30  3.26
 5     1 setar       2       0     2  3.41  3.21  3.50  3.79
 6     1 setar       2       0     3  3.09  2.80  2.90  3.22
 7     2 setar       1       0     1  2.25  2.29  2.25  2.15
 8     2 setar       1       0     2  2.44  2.35  2.45  2.47
 9     2 setar       1       0     3  1.96  1.87  1.92  2.25
10     2 setar       1       1     1  2.04  2.46  2.19  2.28
11     2 setar       1       1     2  2.16  2.68  2.50  2.23
12     2 setar       1       1     3  1.86  2.34  2.14  1.59
13     2 setar       2       0     1  2.26  2.12  2.13  2.20
14     2 setar       2       0     2  2.44  2.53  2.52  2.70
15     2 setar       2       0     3  2.12  2.22  2.29  2.15
16     2 setar       2       1     1  1.99  2.20  2.21  2.06
17     2 setar       2       1     2  2.06  2.40  2.63  2.27
18     2 setar       2       1     3  1.80  1.83  1.84  1.84
> 
> models_univariate %>% 
+   mutate(boot = map(object, ~ data_frame(n = 1:3, boot =head(setar.boot(., seed = 123, returnStarting = TRUE), 3)))) %>% 
+   select(-object) %>% 
+   unnest(boot)  %>% 
+   spread(include, boot)
# A tibble: 18 x 9
     lag model nthresh thDelay     n  both const  none trend
   <dbl> <chr>   <int>   <int> <int> <dbl> <dbl> <dbl> <dbl>
 1     1 setar       1       0     1  2.4   2.4   2.4   2.4 
 2     1 setar       1       0     2  2.68  3.26  3.27  2.58
 3     1 setar       1       0     3  2.81  3.32  3.46  2.95
 4     1 setar       2       0     1  2.4   2.4   2.4   2.4 
 5     1 setar       2       0     2  3.26  3.31  3.30  3.26
 6     1 setar       2       0     3  3.41  3.21  3.50  3.79
 7     2 setar       1       0     1  2.4   2.4   2.4   2.4 
 8     2 setar       1       0     2  2.4   2.4   2.4   2.4 
 9     2 setar       1       0     3  2.25  2.29  2.25  2.15
10     2 setar       1       1     1  2.4   2.4   2.4   2.4 
11     2 setar       1       1     2  2.4   2.4   2.4   2.4 
12     2 setar       1       1     3  2.04  2.46  2.19  2.28
13     2 setar       2       0     1  2.4   2.4   2.4   2.4 
14     2 setar       2       0     2  2.4   2.4   2.4   2.4 
15     2 setar       2       0     3  2.26  2.12  2.13  2.20
16     2 setar       2       1     1  2.4   2.4   2.4   2.4 
17     2 setar       2       1     2  2.4   2.4   2.4   2.4 
18     2 setar       2       1     3  1.99  2.20  2.21  2.06
> 
> ## add regime
> models_univariate %>% 
+   mutate(boot = map(object, ~ setar.boot(., seed = 123, add.regime = TRUE) %>% 
+                       head(3) %>% 
+                       as_data_frame() %>% 
+                       mutate(n = 1:3))) %>% 
+   select(-object) %>% 
+   unnest(boot)  %>% 
+   gather(stat, value, res, regime) %>% 
+   unite(stat_n, stat, n) %>% 
+   spread(stat_n, value) %>% 
+   as.data.frame()
   lag include model nthresh thDelay regime_1 regime_2 regime_3    res_1
1    1    both setar       1       0        2        2        2 2.680504
2    1    both setar       2       0        3        3        3 3.262638
3    1   const setar       1       0        2        2        2 3.261456
4    1   const setar       2       0        2        3        3 3.314793
5    1    none setar       1       0        2        2        2 3.269947
6    1    none setar       2       0        3        3        3 3.303644
7    1   trend setar       1       0        2        2        2 2.584354
8    1   trend setar       2       0        3        3        3 3.259283
9    2    both setar       1       0        2        2        2 2.250692
10   2    both setar       1       1        2        2        2 2.036011
11   2    both setar       2       0        3        3        3 2.258627
12   2    both setar       2       1        2        2        2 1.985308
13   2   const setar       1       0        2        2        2 2.286870
14   2   const setar       1       1        2        2        2 2.457606
15   2   const setar       2       0        3        2        3 2.117161
16   2   const setar       2       1        2        2        2 2.195767
17   2    none setar       1       0        2        2        2 2.247274
18   2    none setar       1       1        2        2        2 2.191245
19   2    none setar       2       0        3        2        3 2.125695
20   2    none setar       2       1        2        2        2 2.209441
21   2   trend setar       1       0        2        2        2 2.148938
22   2   trend setar       1       1        2        2        2 2.282132
23   2   trend setar       2       0        3        3        3 2.200934
24   2   trend setar       2       1        2        2        2 2.063324
      res_2    res_3
1  2.807235 2.152866
2  3.413510 3.088393
3  3.322921 2.706751
4  3.207318 2.801485
5  3.456730 2.830800
6  3.501586 2.899490
7  2.950837 2.600816
8  3.791315 3.221822
9  2.436979 1.955293
10 2.158715 1.855217
11 2.438595 2.119339
12 2.060156 1.799810
13 2.352283 1.870346
14 2.683413 2.341209
15 2.525992 2.216112
16 2.403720 1.831339
17 2.448879 1.919116
18 2.504760 2.141582
19 2.519491 2.294384
20 2.625587 1.841946
21 2.467606 2.250157
22 2.229423 1.586690
23 2.700461 2.153961
24 2.270533 1.840369
> 
> ## add regime and starting
> models_univariate %>% 
+   mutate(boot = map(object, ~ setar.boot(., seed = 123, add.regime = TRUE, returnStarting = TRUE) %>% 
+                       head(3) %>% 
+                       as_data_frame() %>% 
+                       mutate(n = 1:3))) %>% 
+   select(-object) %>% 
+   unnest(boot)  %>% 
+   gather(stat, value, res, regime) %>% 
+   unite(stat_n, stat, n) %>% 
+   spread(stat_n, value) %>% 
+   as.data.frame()
   lag include model nthresh thDelay regime_1 regime_2 regime_3 res_1    res_2
1    1    both setar       1       0       NA        2        2   2.4 2.680504
2    1    both setar       2       0       NA        3        3   2.4 3.262638
3    1   const setar       1       0       NA        2        2   2.4 3.261456
4    1   const setar       2       0       NA        2        3   2.4 3.314793
5    1    none setar       1       0       NA        2        2   2.4 3.269947
6    1    none setar       2       0       NA        3        3   2.4 3.303644
7    1   trend setar       1       0       NA        2        2   2.4 2.584354
8    1   trend setar       2       0       NA        3        3   2.4 3.259283
9    2    both setar       1       0       NA       NA        2   2.4 2.400000
10   2    both setar       1       1       NA       NA        2   2.4 2.400000
11   2    both setar       2       0       NA       NA        3   2.4 2.400000
12   2    both setar       2       1       NA       NA        2   2.4 2.400000
13   2   const setar       1       0       NA       NA        2   2.4 2.400000
14   2   const setar       1       1       NA       NA        2   2.4 2.400000
15   2   const setar       2       0       NA       NA        3   2.4 2.400000
16   2   const setar       2       1       NA       NA        2   2.4 2.400000
17   2    none setar       1       0       NA       NA        2   2.4 2.400000
18   2    none setar       1       1       NA       NA        2   2.4 2.400000
19   2    none setar       2       0       NA       NA        3   2.4 2.400000
20   2    none setar       2       1       NA       NA        2   2.4 2.400000
21   2   trend setar       1       0       NA       NA        2   2.4 2.400000
22   2   trend setar       1       1       NA       NA        2   2.4 2.400000
23   2   trend setar       2       0       NA       NA        3   2.4 2.400000
24   2   trend setar       2       1       NA       NA        2   2.4 2.400000
      res_3
1  2.807235
2  3.413510
3  3.322921
4  3.207318
5  3.456730
6  3.501586
7  2.950837
8  3.791315
9  2.250692
10 2.036011
11 2.258627
12 1.985308
13 2.286870
14 2.457606
15 2.117161
16 2.195767
17 2.247274
18 2.191245
19 2.125695
20 2.209441
21 2.148938
22 2.282132
23 2.200934
24 2.063324
> 
> ################
> ### test boot
> ################
> 
> setar.boot.check <-  function(object, n_digits = 10) {
+   mod_boot <- setar.boot(object, boot.scheme = "check", n_digits = n_digits, returnStarting = TRUE)  
+   orig_series <- as.numeric(object$str$x)
+   all.equal(mod_boot, orig_series)
+ }
> 
> linear.boot.check <-  function(object, n_digits = 10) {
+   mod_boot <- linear.boot(object, boot.scheme = "check",n_digits = n_digits, returnStarting = TRUE)  
+   orig_series <- as.numeric(object$str$x)
+   all.equal(mod_boot, orig_series)
+ }
> 
> 
> 
> ## nthresh ==0
> ar_1_noInc <- linear(log(lynx), m = 1, include = "none")
> ar_2_noInc <- linear(log(lynx), m = 2, include = "none")
> ar_1_const <- linear(log(lynx), m = 1, include = "const")
> ar_2_const <- linear(log(lynx), m = 2, include = "const")
> 
> 
> setar.boot.check(object=ar_1_noInc)
[1] TRUE
> setar.boot.check(ar_2_noInc)
[1] TRUE
> setar.boot.check(ar_1_const)
[1] TRUE
> setar.boot.check(ar_2_const)
[1] TRUE
> 
> linear.boot.check(ar_1_noInc)
[1] TRUE
> linear.boot.check(ar_2_noInc)
[1] TRUE
> linear.boot.check(ar_1_const)
[1] TRUE
> linear.boot.check(ar_2_const)
[1] TRUE
> 
> 
> 
> ## nthresh ==1
> set_1th_l1 <-  setar(lynx, nthresh=1, m=1)
Warning message:
Possible unit root in the low  regime. Roots are: 0.5005 
> set_1th_l2 <-  setar(lynx, nthresh=1, m=2)
Warning message:
Possible unit root in the low  regime. Roots are: 0.4681 5.0788 
> set_1th_l1_tr <-  setar(lynx, nthresh=1, m=1, include = "trend")
Warning message:
Possible unit root in the low  regime. Roots are: 0.633 
> 
> 
> setar.boot.check(set_1th_l1)
[1] "Mean relative difference: 0.987262"
> setar.boot.check(set_1th_l1, n_digits = 2)
[1] TRUE
> setar.boot.check(set_1th_l2)
[1] "Mean relative difference: 0.1405485"
> setar.boot.check(set_1th_l2, n_digits = 5)
[1] "Mean relative difference: 0.2019088"
> setar.boot.check(set_1th_l1_tr)
[1] "Mean relative difference: 9.138646e-07"
> setar.boot.check(set_1th_l1_tr, n_digits = 1)
[1] TRUE
> 
> 
> ## why difference?
> if(FALSE) {
+   library(tidyverse)
+   getTh(set_1th_l2)
+   filt_diff <-  function(x, minus=2, tol =1) {
+     x2 <- x %>% 
+       mutate(diff = x$boot - x$orig)
+     first <- which(abs(x2$diff)>tol)[1]
+     filter(x2, between(n_row, first -minus, first +minus))
+   }
+   set_1th_l2_b <- setar.boot(setarObject = set_1th_l2, boot.scheme = "check", n_digits = 7)
+   
+   df_comp <- data_frame(orig = lynx, boot = set_1th_l2_b) %>% 
+     mutate(n_row = 1:n(),
+            th1 = getTh(set_1th_l1_tr)[1],
+            th2 = getTh(set_1th_l1_tr)[2],
+            reg = regime(set_1th_l1_tr)) 
+   
+   df_comp %>% 
+     filt_diff(tol = 0.01)   
+   df_comp %>% 
+     qplot(x=n_row, y = as.numeric(orig), data =., geom = "line") +
+     geom_point(aes(colour = as.numeric(reg) %>%  factor))
+     geom_line(aes(y = boot), colour = "red")
+ }
> 
> ## nthresh == 2
> 
> ### boot
> set_2th_l1 <-  setar(lynx, nthresh=2, m=1)
Warning message:
Possible unit root in the low  regime. Roots are: 0.7924 
> set_2th_l2 <-  setar(lynx, nthresh=2, m=2)
Warning message:
Possible unit root in the low  regime. Roots are: 0.5739 4.6636 
> set_2th_l1_tr <-  setar(lynx, nthresh=2, m=1, include = "trend")
Warning message:
Possible unit root in the low  regime. Roots are: 0.633 
> 
> 
> setar.boot.check(set_2th_l1)
[1] TRUE
> setar.boot.check(set_2th_l2)
[1] "Mean relative difference: 1"
> setar.boot.check(set_2th_l2, n_digits = 1)
[1] "Mean relative difference: 0.5431945"
> setar.boot.check(set_2th_l1_tr)
[1] "Mean relative difference: 1"
> setar.boot.check(set_2th_l1_tr, n_digits = 1)
[1] "Mean relative difference: 0.0001531941"
> 
> 
> ################
> ### tets sim
> ################
> 
> ## nthresh ==0
> set.seed(123)
> innov_1 <-  rnorm(200)
> sim_nth0 <- setar.sim(B=0.5, lag=1, nthresh=0, 
+                       include ="none",
+                       starting= 0.4,
+                       innov=innov_1,
+                       show.parMat = TRUE)
     const trend phi_1
[1,]     0     0   0.5
> 
> head(sim_nth0)
[1] -0.3604756 -0.4104153  1.3535007  0.7472587  0.5029171  1.9665235
> 
> ## nthresh ==1
> Bvals <- c(2.9,-0.4,-0.1, 2, 0.2,0.3)
> sim_new <- setar.sim(B=Bvals,lag=2, nthresh=1, Thresh=2, starting=c(2.8,2.2),
+                      innov=innov_1, show.parMat = TRUE)
     const_L trend_L phi_1_L phi_2_L const_H trend_H phi_1_H phi_2_H
[1,]     2.9       0    -0.4    -0.1       2       0     0.2     0.3
> 
> head(sim_new)
[1] 2.719524 2.973727 4.969311 3.956489 4.411379 5.784287
> 
> proc.time()
   user  system elapsed 
  2.845   0.119   2.956 
